extraArgs:
  provider: keycloak
  client-id: "dev-k8s-deme-infra"
  client-secret: "gwlNwMWpXkhyj7IFQ6s--客户端凭据"
  login-url: "http://keycloak.chinaetek.com:44080/auth/realms/master/protocol/openid-connect/auth"
  redeem-url: "http://keycloak.chinaetek.com:44080/auth/realms/master/protocol/openid-connect/token"
  profile-url: "http://keycloak.chinaetek.com:44080/auth/realms/master/protocol/openid-connect/userinfo"
  validate-url: "http://keycloak.chinaetek.com:44080/auth/realms/master/protocol/openid-connect/userinfo"
  ## 需要加密的回调地址
  redirect-url: "http://deme.chinaetek.com:44080/oauth2/callback"
  # keycloak的授权访问的组
  keycloak-group: "/deme"
  # 注意格式，使用命令生成：openssl rand -base64 32 | tr -- '+/' '-_'
  cookie-secret: "kt-WcZMa1qdTV6tEh4CEocUa_EA_VRIUg-i64YxU5Xo="
  http-address: 0.0.0.0:4180
  insecure-oidc-allow-unverified-email: true
  # 只能是对应域名邮箱的用户才可以访问，其他域名邮箱的用户会报错，显示403状态码。
  email-domain: 'ce-service.com.cn'
  scope: "email"
  whitelist-domain: "deme.chinaetek.com:44080"
  cookie-domain: "deme.chinaetek.com"
  cookie-expire: 24h0m0s
  set-authorization-header: true
  ssl-insecure-skip-verify: true
  upstream: static://

image:
  repository: "bitnami/oauth2-proxy"
  tag: "latest"
  pullPolicy: "IfNotPresent"

extraEnv:
  - name: TZ
    value: Asia/Shanghai
  - name: OAUTH2_PROXY_WHITELIST_DOMAINS
    value: ".chinaetek.com:44080"
  - name: OAUTH2_PROXY_COOKIE_DOMAIN
    value: "deme.chinaetek.com:44080"
  - name: OAUTH2_PROXY_COOKIE_SECURE
    value: "false"
replicaCount: 1
affinity:
  podAntiAffinity:
    requiredDuringSchedulingIgnoredDuringExecution:
      - labelSelector:
          matchLabels:
            app: oauth2-proxy
        topologyKey: "kubernetes.io/hostname"



service:
  type: ClusterIP
  port: 4180
  annotations: {}

ingress:
  enabled: true
  path: /
  # 域名和被加密的Igress域名一致，否则的话，只会显示认证通过而不跳转。
  hosts:
    - deme.chinaetek.com
  # Extra paths to prepend to every host configuration. This is useful when working with annotation based services.
  extraPaths:
  - path: /*
    backend:
      serviceName: ssl-redirect
      servicePort: use-annotation
  annotations:
    nginx.ingress.kubernetes.io/ssl-redirect: "false"
    nginx.ingress.kubernetes.io/affinity: cookie
    nginx.ingress.kubernetes.io/session-cookie-name: session
    nginx.ingress.kubernetes.io/session-cookie-expires: "172800"
    nginx.ingress.kubernetes.io/session-cookie-max-age: "172800"
    nginx.ingress.kubernetes.io/enable-cors: "true"
    nginx.ingress.kubernetes.io/cors-allow-headers: X-XSRF-TOKEN,Accept,Accept-Encoding,Accept-Language,DNT,X-CustomHeader,Keep-Alive,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Authorization,Origin,Connection,Content-Length,Content-Type,Host,Referer,User-Agent
    nginx.ingress.kubernetes.io/cors-allow-credentials: "true"
    kubernetes.io/ingress.class: nginx
    #kubernetes.io/tls-acme: "true"
#  tls:
    # Secrets must be manually created in the namespace.
#    - secretName: chinaetek-tls 
#      hosts:
#        - oauth2-proxy.chinaetek.com
resources:
  limits:
    cpu: 200m
    memory: 100Mi
  requests:
    cpu: 100m
    memory: 25Mi

